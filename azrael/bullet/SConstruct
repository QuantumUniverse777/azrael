# -----------------------------------------------------------------------------
# Create Compile environment.
# -----------------------------------------------------------------------------
base_files = []
base_libs = ['BulletCollision', 'BulletDynamics', 'LinearMath']

libPath = ['/usr/local/lib']
base_include = ['/usr/include', '/usr/include/bullet', '/usr/include/python3.4m']
base_flags = ('-g -Wall -Wextra -pedantic -std=c++11'
              # The `-isystem` switch includes a header directory in the
              # *exact*  same way as the conventional '-I' switch. However, the
              # compiler will not throw any warnings it encounters in those
              # files. This is useful because both 'Bullet' and 'python3.4m'
              # generate a fair few of them and there is nothing I can do about
              # it.  Note: the directories are also included in `base_flags`
              # (which means they get included with the '-I' flag), but because
              # the lines below were defined later they take precedence. Simply
              # uncomment the lines below to see the warnings.
              ' -isystem /usr/include/python3.4m'
              ' -isystem /usr/include/bullet'
              )

# Determine which programs to compile.
compile_tests = False
compile_wrapper = True
compile_standalone = False

# Output directory for binaries (this variable does not affect the location of
# the shared libraries which will always end up in the CWD).
build_dir = 'build/test/'

# -----------------------------------------------------------------------------
# Azrael (wrapped with Cython)
# -----------------------------------------------------------------------------

if compile_standalone:
    srcFiles = ['main.cpp', 'bullet.cpp']
    libs = base_libs + ['pthread']
    flags = str(base_flags)
    inc_path = list(base_include)
    
    # Initialize the SCons environment.
    azrael_test = Environment(
        LIBS=libs, LIBPATH=libPath, CPPPATH=inc_path, CCFLAGS=flags)

    VariantDir(build_dir, './', duplicate=0)
    azrael_test.Program(target='bin/main', source=srcFiles)

if compile_tests:
    srcFiles = base_files + ['test_bullet', 'util']
    libs = base_libs + ['gtest', 'pthread', 'gtest_main']
    flags = str(base_flags)
    inc_path = list(base_include)
    
    # Initialize the SCons environment.
    azrael_test = Environment(
        LIBS=libs, LIBPATH=libPath, CPPPATH=inc_path, CCFLAGS=flags)
    VariantDir(build_dir, './', duplicate=0)

    srcFiles = [build_dir + _ + '.cpp' for _ in srcFiles]
    azrael_test.Program(target='bin/run_tests', source=srcFiles)

if compile_wrapper:
    srcFiles = ['cython_bullet.cpp', 'bullet.cpp']
    libs = list(base_libs)
    flags = base_flags + ' -pthread '
    inc_path = list(base_include)

    # Run Cython on the pyx file to generate the cpp file.
    env = Environment()
    env.Command(
        'cython_bullet.cpp', 'cython_bullet.pyx', 'cython3 --cplus $SOURCE')
    del env

    # This will prevent Scons from prefixing the library with 'lib'. This is
    # important because Python will not import libraries with this prefix.
    lib_prefix = ''

    # Build shared library.
    SharedLibrary(
        target='cython_bullet.cpython-34m.so', source=srcFiles,
        CPPPATH=inc_path, LIBS=libs, SHLIBPREFIX=lib_prefix, CPPFLAGS=flags)
